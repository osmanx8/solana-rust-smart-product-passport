version: '3.8'

services:
  # Rust Backend
  spp-backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - RUST_LOG=info
      - SOLANA_RPC_URL=https://api.devnet.solana.com
      - BUNDLR_URL=https://node1.bundlr.network
      - KEYPAIR_PATH=/app/keypair.json
    volumes:
      - ./backend/keypair.json:/app/keypair.json
      - anchor-target:/app/programs:ro
    networks:
      - spp-network
    restart: unless-stopped

  # Frontend (React)
  spp-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080
      - REACT_APP_SOLANA_NETWORK=devnet
    depends_on:
      - spp-backend
    networks:
      - spp-network
    restart: unless-stopped

  # Redis для кешування (опціонально)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - spp-network
    restart: unless-stopped

  # PostgreSQL для зберігання даних (опціонально)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=spp_db
      - POSTGRES_USER=spp_user
      - POSTGRES_PASSWORD=spp_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - spp-network
    restart: unless-stopped

  # Nginx для проксі (опціонально)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - spp-backend
      - spp-frontend
    networks:
      - spp-network
    restart: unless-stopped

volumes:
  redis-data:
  postgres-data:
  anchor-target:

networks:
  spp-network:
    driver: bridge 